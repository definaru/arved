{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","className","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","num","p","toFixed","split","reverse","i","orig","moneyFormatter","IncomeExpenses","amounts","income","expense","Transaction","sign","text","onClick","TransactionList","length","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","Math","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e72b1f4e.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Header = () => {\n    return (\n        <h2 className=\"text-gold\">\n            <small className=\"block text-muted\">Arved</small>Отслеживание расходов\n        </h2>\n    )\n}\n","export default (state, action) => {\n  switch(action.type) {\n    case 'DELETE_TRANSACTION':\n      return {\n        ...state,\n        transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\n      }\n    case 'ADD_TRANSACTION':\n      return {\n        ...state,\n        transactions: [action.payload, ...state.transactions]\n      }\n    default:\n      return state;\n  }\n}","import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\n\n// Initial state\nconst initialState = {\n  transactions: []\n}\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // Actions\n  function deleteTransaction(id) {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    });\n  }\n\n  return (<GlobalContext.Provider value={{\n    transactions: state.transactions,\n    deleteTransaction,\n    addTransaction\n  }}>\n    {children}\n  </GlobalContext.Provider>);\n}","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\n//Money formatter function\nfunction moneyFormatter(num) {\n  let p = num.toFixed(2).split('.');\n  return (\n    '$ ' +\n    p[0]\n      .split('')\n      .reverse()\n      .reduce(function (acc, num, i, orig) {\n        return num === '-' ? acc : num + (i && !(i % 3) ? ',' : '') + acc;\n      }, '') +\n    '.' +\n    p[1]\n  );\n}\n\nexport const Balance = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map(transaction => transaction.amount);\n\n  const total = amounts.reduce((acc, item) => (acc += item), 0);\n\n    return (\n        <>\n            <h6 className=\"text-dark m-0\">Ваш баланс</h6>\n            <h1 className=\"text-dark\">{moneyFormatter(total)}</h1>\n        </>\n    )\n}\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\n//Money formatter function\nfunction moneyFormatter(num) {\n  let p = num.toFixed(2).split('.');\n  return (\n    '$ ' +\n    p[0]\n      .split('')\n      .reverse()\n      .reduce(function (acc, num, i, orig) {\n        return num === '-' ? acc : num + (i && !(i % 3) ? ',' : '') + acc;\n      }, '') +\n    '.' +\n    p[1]\n  );\n}\n\nexport const IncomeExpenses = () => {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map(transaction => transaction.amount);\n\n  const income = amounts\n    .filter(item => item > 0)\n    .reduce((acc, item) => (acc += item), 0);\n\n  const expense = (\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\n    -1\n  );\n\n    return (\n        <div className=\"inc-exp-container\">\n            <div>\n                <h4>Доходы</h4>\n                <p className=\"money plus\">{moneyFormatter(income)}</p>\n            </div>\n            <div>\n                <h4>Расходы</h4>\n                <p className=\"money minus\">{moneyFormatter(expense)}</p>\n            </div>\n        </div>\n    )\n}\n","import React, {useContext} from 'react'\nimport { GlobalContext } from '../context/GlobalState'\n\n//Money formatter function\nfunction moneyFormatter(num) {\n    let p = num.toFixed(2).split('.')\n    return (\n        '$ ' +\n        p[0]\n        .split('')\n        .reverse()\n        .reduce(function (acc, num, i, orig) {\n            return num === '-' ? acc : num + (i && !(i % 3) ? ',' : '') + acc\n        }, '') +\n        '.' +\n        p[1]\n    )\n}\n\nexport const Transaction = ({ transaction }) => \n{\n    const { deleteTransaction } = useContext(GlobalContext);\n\n    const sign = transaction.amount < 0 ? '-' : '+';\n\n    return (\n        <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\n            {transaction.text} <span>{sign}{moneyFormatter(transaction.amount)}</span>\n            <button onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\n        </li>\n    )\n}\n","import React, { useContext } from 'react'\nimport { Transaction } from './Transaction'\nimport { GlobalContext } from '../context/GlobalState'\n\n\nexport const TransactionList = () => {\n\n    const { transactions } = useContext(GlobalContext)\n\n    return (\n        <>\n            {transactions.length ? \n            <>\n            <h3>История счёта:</h3>\n            <ul className=\"list\">\n                {transactions.map(transaction => (\n                    <Transaction key={transaction.id} transaction={transaction} />\n                ))}\n            </ul>\n            </> : ''}\n        </>\n    )\n}\n","import React, {useState, useContext} from 'react'\nimport { GlobalContext } from '../context/GlobalState'\n\n\nexport const AddTransaction = () => {\n\n    const [text, setText] = useState('');\n    const [amount, setAmount] = useState(0)\n\n    const { addTransaction } = useContext(GlobalContext)\n\n    const onSubmit = e => {\n        e.preventDefault()\n        if (amount !== 0 && amount !== '') {\n            const newTransaction = {\n                id: Math.floor(Math.random() * 100000000),\n                text,\n                amount: +amount\n            }\n\n            addTransaction(newTransaction)\n            setText('')\n            setAmount('')    \n        } return\n    }\n\n    return (\n        <>\n            <h3>Добавить новую транзакцию:</h3>\n            <form onSubmit={onSubmit}>\n                <div className=\"form-control\">\n                    <label htmlFor=\"amount\">\n                        <strong>Сумма:</strong>\n                        <small className=\"block text-muted\">(negative - expense, positive - income)</small>\n                    </label>\n                    <input \n                        type=\"number\" \n                        value={amount} \n                        onChange={(e) => setAmount(e.target.value)} \n                        placeholder=\"Введите сумму...\" \n                    />\n                </div>                \n                <div className=\"form-control\">\n                    <label htmlFor=\"text\">\n                        <strong>Описание:</strong>\n                    </label>\n                    <input \n                        type=\"text\" \n                        value={text} \n                        onChange={(e) => setText(e.target.value)} \n                        placeholder=\"Введите описание...\" \n                    />\n                </div>\n                <button className=\"btn\">Добавить транзакцию</button>\n                <p className=\"text-muted mt-5 text-sm\">&copy; Defina LLC, 2011 |  All Right Recerved</p>\n            </form>\n        </>\n    )\n}\n","import React from 'react'\nimport { Header } from './components/Header'\nimport { Balance } from './components/Balance'\nimport { IncomeExpenses } from './components/IncomeExpenses'\nimport { TransactionList } from './components/TransactionList'\nimport { AddTransaction } from './components/AddTransaction'\nimport { GlobalProvider } from './context/GlobalState'\nimport './App.css'\n\n\nexport default function App() \n{\n    return (\n        <GlobalProvider>\n        <Header />\n        <div className=\"container\">\n            <Balance />\n            <IncomeExpenses />\n            <TransactionList />\n            <AddTransaction />\n        </div>\n        </GlobalProvider>\n    )\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}